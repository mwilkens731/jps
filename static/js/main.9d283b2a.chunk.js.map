{"version":3,"sources":["AppData.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["AppData","appName","appId","clientId","clientSecret","corsAnywhereUrl","leagueKeys","thisYear","lastYear","lastYearTeamKeys","1","2","3","4","5","6","7","8","9","10","11","12","OAuth","require","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectUri","window","location","host","indexOf","state","oauth","OAuth2","oauthWithProxy","loading","useAuthorizationHeaderforGET","saveLoginResults","bind","assertThisInitialized","extractTeams","getAxiosHeaders","getRosters","code","queryString","parse","search","getOAuthAccessToken","grant_type","redirect_uri","assign","getAuthorizeUrl","response_type","accessToken","headers","Authorization","e","access_token","refresh_token","console","log","setState","axios","get","result","data","fantasy_content","league","teams","draft_status","predraft","teamsArray","i","count","thisTeam","push","name","team","teamKey","team_key","lastYearTeamKey","team_id","_this2","forEach","_ref","asyncToGenerator","regenerator_default","a","mark","_callee3","wrap","_context3","prev","next","sent","roster","players","stop","_x6","apply","arguments","react_default","createElement","className","style","width","height","role","class","Component","withRouter","App","BrowserRouter","Switch","Route","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d283b2a.chunk.js","sourcesContent":["export default {\r\n  appName: 'juanpierresucks',\r\n  appId: 'mxfalV3c',\r\n  clientId: 'dj0yJmk9WW9hSlNxcDllcUZwJnM9Y29uc3VtZXJzZWNyZXQmc3Y9MCZ4PTU5',\r\n  clientSecret: '4a1c4d6e5af02bfe69e226d666a5113a7b2b35a6',\r\n  corsAnywhereUrl: 'https://cors-anywhere.herokuapp.com/',\r\n  leagueKeys: {\r\n    thisYear: '388.l.74981',\r\n    lastYear: '378.l.46962'\r\n  },\r\n  lastYearTeamKeys: {\r\n    1: '.t.1',\r\n    2: '.t.12',\r\n    3: '.t.2',\r\n    4: '.t.4',\r\n    5: '.t.5',\r\n    6: '.t.6',\r\n    7: '.t.7',\r\n    8: '.t.11',\r\n    9: '.t.8',\r\n    10: '.t.9',\r\n    11: '.t.10',\r\n    12: '.t.3'\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport AppData from './AppData';\r\nimport { withRouter } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport axios from 'axios';\r\nvar OAuth = require('oauth');\r\n\r\nclass Main extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    let redirectUri = 'https://mwilkens731.github.io/jps';\r\n    if (window.location.host.indexOf('localhost') >= 0) {\r\n      redirectUri = 'oob';\r\n    }\r\n    this.state = {\r\n      oauth: new OAuth.OAuth2(AppData.clientId, AppData.clientSecret, 'https://api.login.yahoo.com/', 'oauth2/request_auth', 'oauth2/get_token'),\r\n      oauthWithProxy: new OAuth.OAuth2(AppData.clientId, AppData.clientSecret, AppData.corsAnywhereUrl + 'https://api.login.yahoo.com/', 'oauth2/request_auth', 'oauth2/get_token'),\r\n      redirectUri: redirectUri,\r\n      loading: true\r\n    };\r\n    this.state.oauthWithProxy.useAuthorizationHeaderforGET(true);\r\n    this.saveLoginResults = this.saveLoginResults.bind(this);\r\n    this.extractTeams = this.extractTeams.bind(this);\r\n    this.getAxiosHeaders = this.getAxiosHeaders.bind(this);\r\n    this.getRosters = this.getRosters.bind(this);\r\n  }\r\n\r\n  async componentDidMount (props) {\r\n    let code = (queryString.parse(this.props.location.search)).code;\r\n    if (!code && !this.state.code) {\r\n      window.location.assign(this.state.oauth.getAuthorizeUrl({\r\n        redirect_uri: this.state.redirectUri,\r\n        response_type: 'code'\r\n      }));\r\n    } else {\r\n      this.state.oauthWithProxy.getOAuthAccessToken(code, {\r\n        grant_type: 'authorization_code',\r\n        redirect_uri: this.state.redirectUri\r\n      }, this.saveLoginResults);\n    }\r\n  }\r\n\r\n  getAxiosHeaders (accessToken) {\r\n    if (!accessToken) {\r\n      return {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + this.state.accessToken\r\n        }\r\n      };\r\n    } else {\r\n      return {\r\n        headers: {\r\n          'Authorization': 'Bearer ' + accessToken\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  async saveLoginResults (e, code, access_token, refresh_token) {\r\n    if (e) {\r\n      console.log(e);\r\n    } else {\r\n      this.setState({\r\n        code: code,\r\n        accessToken: refresh_token.access_token\r\n      });\r\n      let result = await axios.get(AppData.corsAnywhereUrl + 'https://fantasysports.yahooapis.com/fantasy/v2/league/' + AppData.leagueKeys.thisYear + '/teams?format=json', this.getAxiosHeaders(refresh_token.access_token));\r\n      this.extractTeams(result.data.fantasy_content.league[1].teams, result.data.fantasy_content.league[0].draft_status === 'predraft');\r\n    }\r\n  }\r\n\r\n  extractTeams (teams, predraft) {\r\n    console.log('teams', teams);\r\n    let teamsArray = [];\r\n    for (let i = 0; i < teams.count; i++) {\r\n      let thisTeam = teams[i];\r\n      teamsArray.push({\r\n        name: thisTeam.team[0][2].name,\r\n        teamKey: thisTeam.team[0][0].team_key,\r\n        lastYearTeamKey: AppData.leagueKeys.lastYear + AppData.lastYearTeamKeys[thisTeam.team[0][1].team_id]\r\n      });\r\n    }\r\n    console.log('teamsArray', teamsArray);\r\n    return this.getRosters(teamsArray, predraft);\r\n  }\r\n\r\n  getRosters (teams, predraft) {\r\n    teams.forEach(async (team) => {\r\n      let result = await axios.get(\r\n        AppData.corsAnywhereUrl + 'https://fantasysports.yahooapis.com/fantasy/v2/team/' + (predraft ? team.lastYearTeamKey : team.teamKey) + '/roster?format=json',\r\n        this.getAxiosHeaders(this.state.accessToken));\r\n      console.log('roster results', result.data.fantasy_content.team[1].roster[0].players);\r\n    });\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className='row'>\r\n          <h1 className='col-12 jumbotron text-center'>Juan Pierre Sucks Keeper Costs</h1>\r\n        </div>\r\n        {this.state.loading &&\r\n          <div>\r\n            <div className='spinner-grow' style={{width: '10rem', height: '10rem'}} role='status'>\r\n              <span class='sr-only'>Loading...</span>\r\n            </div>\r\n            <div className='row'>\r\n              <h5 className='col-12 text-center'>Loading Yahoo data...</h5>\r\n            </div>\r\n          </div>\r\n\r\n        }\r\n        {!this.state.loading &&\r\n          <div>{this.state.accessToken}</div>\r\n        }\r\n\r\n      </div>\r\n    );\n  }\r\n}\r\n\r\nMain.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withRouter(Main);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <div className='App'>\n        <BrowserRouter>\n          <Switch>\n            <Route path='/' component={Main} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}